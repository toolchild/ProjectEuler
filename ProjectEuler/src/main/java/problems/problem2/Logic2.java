package problems.problem2;

import java.util.ArrayList;

import problems.LogicBase;

//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

public class Logic2 extends LogicBase {

  @Override
  public long getResult(Number... numbers) {
    return getSumOfFibonaccis(numbers[0].intValue());
  }

  private int getSumOfFibonaccis(int limit) {
    ArrayList<Integer> fibonaccis = new ArrayList<Integer>();
    fibonaccis.add(1);
    fibonaccis.add(2);
    int index = 2;
    int sumOfEvenNumbers = 2;

    while (sumOfEvenNumbers < limit) {
      fibonaccis.add(fibonaccis.get(index - 1) + fibonaccis.get(index - 2));
      if (fibonaccis.get(index) % 2 == 0) {
        sumOfEvenNumbers = sumOfEvenNumbers + fibonaccis.get(index);
      }
      index++;
    }

    return sumOfEvenNumbers;
  }

}
